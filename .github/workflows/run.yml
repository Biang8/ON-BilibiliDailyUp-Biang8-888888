name: test

on:
  # 启用定时任务，每天北京时间凌晨 2 点（UTC 时间前一天 18:00）执行
  schedule:
    - cron: '0 12 * * *'  
  # 手动触发工作流
  workflow_dispatch:  

jobs:
  sign_in:
    # 使用最新的 Ubuntu 环境
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        # 使用最新版本的 checkout 动作
        uses: actions/checkout@v3

      - name: Set up Python
        # 使用最新版本的 setup-python 动作
        uses: actions/setup-python@v4
        with:
          # 指定 Python 版本为 3.x
          python-version: '3.x'

      - name: Modify DNS settings
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf > /dev/null
        continue-on-error: false

      - name: Install dependencies
        run: |
          # 升级 pip 到最新版本
          python -m pip install --upgrade pip
          # 安装项目所需的依赖
          pip install -r requirements.txt
        # 捕获并输出依赖安装过程中的错误信息
        continue-on-error: false

      - name: Run sign-in script
        run: |
          # 运行主脚本
          python main.py
        env:
          # 从 GitHub 仓库的 Secrets 中获取 COOKIES 环境变量
          COOKIES: ${{ secrets.COOKIES }}
          # 从 GitHub 仓库的 Secrets 中获取 WECHAT_ID 环境变量
          WECHAT_ID: ${{ secrets.WECHAT_ID }}
          # 从 GitHub 仓库的 Secrets 中获取 WECHAT_SECRET 环境变量
          WECHAT_SECRET: ${{ secrets.WECHAT_SECRET }}
          # 从 GitHub 仓库的 Secrets 中获取 WECHAT_APP_ID 环境变量
          WECHAT_APP_ID: ${{ secrets.WECHAT_APP_ID }}
          # 从 GitHub 仓库的 secrets 中获取 SERVER_KEY 并设置为环境变量
          SERVER_KEY: ${{ secrets.SERVER_KEY }}
        # 捕获并输出脚本运行过程中的错误信息
        continue-on-error: false
